# Based on the component groups' display name, derive archive names following our own naming scheme
# CPack appends the component group's name, and does not have sprint number and architecture in the name.
# * "IntegrationBus-[Contributor-]1.0.0-[Sprint18-]Windows_VS2017"
# * "IntegrationBus-[Contributor-]1.0.0-[Sprint18-]Linux_GCC" (no clang, top-level folders ./debug ./release)
macro(configure_ib_package_name)
    string(COMPARE NOTEQUAL "${CPACK_PACKAGE_VERSION}" "" is_version_defined)
    if(NOT is_version_defined)
        message(FATAL_ERROR "IntegrationBus packaging expects the version number (CPACK_PACKAGE_VERSION) to be set")
    endif()
    foreach(group ${CPACK_COMPONENT_GROUPS_ALL})
        string(TOUPPER ${group} GROUP)
        set(name "${CPACK_COMPONENT_GROUP_${GROUP}_DISPLAY_NAME}")

        string(COMPARE NOTEQUAL "${IB_SPRINT_NUMBER}" "" is_sprint_number_defined)
        if(is_sprint_number_defined)
            set(version "${CPACK_PACKAGE_VERSION}-Sprint${IB_SPRINT_NUMBER}")
        else()
            set(version "${CPACK_PACKAGE_VERSION}")
        endif()

        if(CMAKE_SYSTEM_NAME MATCHES "Linux")
            if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
                set(system "Linux_Clang")
            elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
                set(system "Linux_GCC")
            else()
                set(system "Linux")
            endif()
        elseif(CMAKE_SYSTEM_NAME MATCHES "Windows")
            if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
                if(MSVC_VERSION GREATER_EQUAL 1910)
                    set(system "Windows_VS2017")
                elseif(MSVC_VERSION GREATER_EQUAL 1900)
                    set(system "Windows_VS2015")
                else()
                    set(system "Windows_VS")
                endif()
            else()
                set(system "Windows")
            endif()
        else()
            message(FATAL_ERROR "IntegrationBus packaging is unsupported for target system '${CMAKE_SYSTEM_NAME}'")
        endif()

        set(CPACK_ARCHIVE_${GROUP}_FILE_NAME "${name}-${version}-${system}")
        message(STATUS "Defined archive name '${CPACK_ARCHIVE_${GROUP}_FILE_NAME}' for packaging component group ${group}")
    endforeach()
endmacro()
