# Copyright (c) Vector Informatik GmbH. All rights reserved.

function(get_ubuntu_version outVers)
    file(READ /etc/issue issue)
    string(REGEX REPLACE "^Ubuntu.*([0-9][0-9]+\.[0-9][0-9]).*" "\\1" issue "${issue}")
    set(${outVers} "${issue}" PARENT_SCOPE)
endfunction()

function(get_compiler_arch outComp outArch outPlatform  )
	#get arch
	if("${CMAKE_SIZEOF_VOID_P}" STREQUAL "8")
		set(SYSTEM_BITNESS "64")
	elseif("${CMAKE_SIZEOF_VOID_P}" STREQUAL "4")
		set(SYSTEM_BITNESS "32")
	else()
		message(FATAL_ERROR "Bitness is not supported: ${CMAKE_SIZEOF_VOID_P}")
	endif()
	#get OS
	if("${CMAKE_SYSTEM_NAME}" STREQUAL "Windows")
		set(SYSTEM_TAG "Win${SYSTEM_BITNESS}")
        set(${outPlatform} "Win${SYSTEM_BITNESS}" PARENT_SCOPE)
		if("${SYSTEM_BITNESS}" STREQUAL "64")
			set(SYSTEM_TAG "x64")
		endif()
	elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
        set(${outPlatform} "Linux" PARENT_SCOPE)
		set(SYSTEM_TAG "x86")
		if(SYSTEM_BITNESS STREQUAL "64")
			set(SYSTEM_TAG "x64") #XXX should be amd64 or x86_64
		endif()
	else()
		set(SYSTEM_TAG "${CMAKE_SYSTEM_NAME}}")
	endif()
	set(${outArch} "${SYSTEM_TAG}" PARENT_SCOPE)
	# get toolset id + version
	set(_tool_tag "UNKNOWN")
	if("${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
		set(_id "${CMAKE_CXX_COMPILER_ID}")
		if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
			set(_id "gcc")
		elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
			set(_id "clang")
		endif()
		message(STATUS "Using compiler version: ${_id}-${CMAKE_CXX_COMPILER_VERSION}")
		set(_tool_tag ${_id})
	elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "Windows")
        if(CMAKE_VS_PLATFORM_TOOLSET MATCHES "v140")
            set(_tool_tag "VS2015")
        elseif(CMAKE_VS_PLATFORM_TOOLSET MATCHES "v141")
            set(_tool_tag "VS2017")
        elseif(CMAKE_VS_PLATFORM_TOOLSET MATCHES "v142")
            set(_tool_tag "VS2019")
        elseif(MSVC_TOOLSET_VERSION MATCHES "142")
            set(_tool_tag "VS2019")
        elseif(MSVC_TOOLSET_VERSION MATCHES "141")
            set(_tool_tag "VS2017")
        elseif(MSVC_TOOLSET_VERSION MATCHES "140")
            set(_tool_tag "VS2015")
        else()
            string(REGEX REPLACE "Visual Studio [0-9]+ ([0-9]+) *.*" "\\1" vers "${CMAKE_GENERATOR}")
            set(_tool_tag "VS${vers}")
        endif()
	endif()
	message(STATUS "Build target is: ${SYSTEM_TAG}-${_tool_tag}")
    set(${outComp} "${_tool_tag}" PARENT_SCOPE)
    set(${outArch} "${SYSTEM_TAG}" PARENT_SCOPE)
endfunction()
