// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*! 
 * @file IoTopicsPubSubTypes.h
 * This header file contains the declaration of the serialization functions.
 *
 * This file was generated by the tool fastcdrgen.
 */


#ifndef _IB_SIM_IO_IDL_IOTOPICS_PUBSUBTYPES_H_
#define _IB_SIM_IO_IDL_IOTOPICS_PUBSUBTYPES_H_

#include <fastrtps/config.h>
#include <fastrtps/TopicDataType.h>

#include "IoTopics.h"

#if !defined(GEN_API_VER) || (GEN_API_VER != 1)
#error Generated IoTopics is not compatible with current installed Fast-RTPS. Please, regenerate it with fastrtpsgen.
#endif

namespace ib
{
    namespace sim
    {
        namespace io
        {
            namespace idl
            {
                /*!
                 * @brief This class represents the TopicDataType of the type AnalogIoMessage defined by the user in the IDL file.
                 * @ingroup IOTOPICS
                 */
                class AnalogIoMessagePubSubType : public eprosima::fastrtps::TopicDataType {
                public:
                        typedef AnalogIoMessage type;

                	AnalogIoMessagePubSubType();
                	virtual ~AnalogIoMessagePubSubType();
                	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                    virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                		bool force_md5 = false) override;
                	virtual void* createData() override;
                	virtual void deleteData(void * data) override;
                	MD5 m_md5;
                	unsigned char* m_keyBuffer;
                };
                /*!
                 * @brief This class represents the TopicDataType of the type DigitalIoMessage defined by the user in the IDL file.
                 * @ingroup IOTOPICS
                 */
                class DigitalIoMessagePubSubType : public eprosima::fastrtps::TopicDataType {
                public:
                        typedef DigitalIoMessage type;

                	DigitalIoMessagePubSubType();
                	virtual ~DigitalIoMessagePubSubType();
                	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                    virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                		bool force_md5 = false) override;
                	virtual void* createData() override;
                	virtual void deleteData(void * data) override;
                	MD5 m_md5;
                	unsigned char* m_keyBuffer;
                };
                /*!
                 * @brief This class represents the TopicDataType of the type PatternIoMessage defined by the user in the IDL file.
                 * @ingroup IOTOPICS
                 */
                class PatternIoMessagePubSubType : public eprosima::fastrtps::TopicDataType {
                public:
                        typedef PatternIoMessage type;

                	PatternIoMessagePubSubType();
                	virtual ~PatternIoMessagePubSubType();
                	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                    virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                		bool force_md5 = false) override;
                	virtual void* createData() override;
                	virtual void deleteData(void * data) override;
                	MD5 m_md5;
                	unsigned char* m_keyBuffer;
                };
                /*!
                 * @brief This class represents the TopicDataType of the type PwmValue defined by the user in the IDL file.
                 * @ingroup IOTOPICS
                 */
                class PwmValuePubSubType : public eprosima::fastrtps::TopicDataType {
                public:
                        typedef PwmValue type;

                	PwmValuePubSubType();
                	virtual ~PwmValuePubSubType();
                	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                    virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                		bool force_md5 = false) override;
                	virtual void* createData() override;
                	virtual void deleteData(void * data) override;
                	MD5 m_md5;
                	unsigned char* m_keyBuffer;
                };
                /*!
                 * @brief This class represents the TopicDataType of the type PwmIoMessage defined by the user in the IDL file.
                 * @ingroup IOTOPICS
                 */
                class PwmIoMessagePubSubType : public eprosima::fastrtps::TopicDataType {
                public:
                        typedef PwmIoMessage type;

                	PwmIoMessagePubSubType();
                	virtual ~PwmIoMessagePubSubType();
                	virtual bool serialize(void *data, eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;
                	virtual bool deserialize(eprosima::fastrtps::rtps::SerializedPayload_t *payload, void *data) override;
                    virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;
                	virtual bool getKey(void *data, eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
                		bool force_md5 = false) override;
                	virtual void* createData() override;
                	virtual void deleteData(void * data) override;
                	MD5 m_md5;
                	unsigned char* m_keyBuffer;
                };
            }
        }
    }
}

#endif // _IB_SIM_IO_IDL_IOTOPICS_PUBSUBTYPES_H_